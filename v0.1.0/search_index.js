var documenterSearchIndex = {"docs":
[{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Welcome to the the SpectralStatistics.jl library - a Julia package for computing and analyzing the statistical properties of quantum spectra.  ","category":"page"},{"location":"#Introduction","page":"Home","title":"Introduction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Spectral statistics are a usefull tool for analyzing and classifying the dynamical properties of quantum systems. The statistic featured in this library are most comomnly used to study quantum chaos and integrability and quantum-classical correspondence. The aim of the package is to provide efficient, user-friendly and extensively tested implementations of the most widely used spectral statistics and analytical models that describe them in various settings. We hope the package will be usefull to seasoned veterans of quantum chaos as well as new entrants into the field. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Tutorial section explains how to get started using SpectralStatistics.","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the API section for the complete documentation on all the exported types and functions. ","category":"page"},{"location":"#Package-features","page":"Home","title":"Package features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Compute the most comonly used spectral statistics of real quantum spectra.\nCompare and fit analytical expressions derived from dynamical and random matrix theory models.","category":"page"},{"location":"#News","page":"Home","title":"News","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is the first version of the SpectralStatistics.jl package.","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"tutorial/#Tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"This section will guide you","category":"page"},{"location":"tutorial/#Instalation","page":"Tutorial","title":"Instalation","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"SpectralStatistics can be installed using the Julia package manager. From the Julia REPL, type ] to enter the Pkg REPL mode and run","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"a=1","category":"page"},{"location":"tutorial/#Unfolding-spectra","page":"Tutorial","title":"Unfolding spectra","text":"","category":"section"},{"location":"tutorial/#Computing-spectral-statistics","page":"Tutorial","title":"Computing spectral statistics","text":"","category":"section"},{"location":"tutorial/#Using-models","page":"Tutorial","title":"Using models","text":"","category":"section"},{"location":"API/#API","page":"API","title":"API","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"The followinig pages document and explain the functionality of all exported types and functions in the library.","category":"page"},{"location":"API/#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"","category":"page"},{"location":"API/#Abstract-types","page":"API","title":"Abstract types","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"DataSample\nModel","category":"page"},{"location":"API/#SpectralStatistics.DataSample","page":"API","title":"SpectralStatistics.DataSample","text":"DataSample\n\nDataSample is an abstract supertype encompassing all concrete implementations of  data structures used for processing spectra in the SpectralStatistics.jl library.\n\n\n\n\n\n","category":"type"},{"location":"API/#SpectralStatistics.Model","page":"API","title":"SpectralStatistics.Model","text":"Model\n\nModel is an abstract supertype encompassing all concrete implementations of  the analytical spectral statistics models in the SpectralStatistics.jl library.\n\n\n\n\n\n","category":"type"},{"location":"API/#Data-types","page":"API","title":"Data types","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"RealSpectrum\nUnfoldedSpectrum ","category":"page"},{"location":"API/#SpectralStatistics.RealSpectrum","page":"API","title":"SpectralStatistics.RealSpectrum","text":"RealSpectrum <: DataSample\n\nRealSpectrum is a concrete type used as a container for spectra of real numbers.\n\n\n\n\n\n","category":"type"},{"location":"API/#SpectralStatistics.UnfoldedSpectrum","page":"API","title":"SpectralStatistics.UnfoldedSpectrum","text":"UnfoldedSpectrum <: DataSample\n\nUnfoldedSpectrum is a concrete type used as a container for spectra after unfolding.\n\n\n\n\n\n","category":"type"},{"location":"API/#Spectral-Statistics","page":"API","title":"Spectral Statistics","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"level_spacing\nlevel_spacing_pdf\nlevel_spacing_cdf\nlevel_spacing_u\nnumber_variance\nrigidity\nspectral_form_factor","category":"page"},{"location":"API/#SpectralStatistics.level_spacing","page":"API","title":"SpectralStatistics.level_spacing","text":"level_spacing(spect::UnfoldedSpectrum; n::Int = 1) → s::Vector\n\nReturn the level spacings of order n.  The nearest neighbour level spacings are the default, given by n=1.\n\nDescription\n\nThe level spacings of order n are given by the difference between the n-th consecutive levels of the spectrum.  The nearest neighbour level spacing is considered most commonly. \n\nArguments\n\nspect: The unfolded energy spectrum, given as an instance of type UnfoldedSpectrum.\n\nKeyword arguments\n\nn=1 : The order of the level spacings.\n\nReturns\n\ns : Vector of level spacings.\n\n\n\n\n\n","category":"function"},{"location":"API/#SpectralStatistics.level_spacing_pdf","page":"API","title":"SpectralStatistics.level_spacing_pdf","text":"level_spacing_pdf(model::Model, pts::Vector; n::Int = 1) → p::Vector\n\nReturn the analytical expression for the level spacing probability density function, corresponding to the chosen model, evaluated at positions pts.\n\nDescription\n\nThe nearest neighbour level spacing distributions are the most commonly studied spectral statistics.\n\nArguments\n\nmodel: The model, given as an instance of a concrete subtype of Model.\npts: The positions where probabability density function should be evaluated.\n\nKeyword arguments\n\nn=1 : The order of the level spacings.\n\nReturns\n\np : Vector of the probabilites.\n\n\n\n\n\nlevel_spacing_pdf(spect::UnfoldedSpectrum, bins::Vector; n::Int = 1) → s::Vector p::Vector\n\nReturn a histogram of the probability density function of the level spacings of order n. The nearest neighbour level spacings are the default, given by n=1.\n\nDescription\n\nThe nearest neighbour level spacing distributions are the most commonly studied spectral statistics.\n\nArguments\n\nspect: The unfolded energy spectrum, given as an instance of type UnfoldedSpectrum.\nbins: The boundaries of the bin positions.\n\nKeyword arguments\n\nn=1 : The order of the level spacings.\n\nReturns\n\np : Vector of the probability contained in each bin.\n\n\n\n\n\n","category":"function"},{"location":"API/#SpectralStatistics.level_spacing_cdf","page":"API","title":"SpectralStatistics.level_spacing_cdf","text":"level_spacing_cdf(model::Model, pts::Vector; n::Int = 1) → w::Vector\n\nReturn the analytical expression for level spacing cumulative density function, corresponding to the chosen model, evaluated at positions pts.\n\nArguments\n\nmodel: The model, given as an instance of a concrete subtype of Model.\npts: The positions where cumulative density function should be evaluated.\n\nKeyword arguments\n\nn=1 : The order of the level spacings.\n\nReturns\n\nw : Vector of the cumulative probabilities.\n\n\n\n\n\nlevel_spacing_cdf(spect::UnfoldedSpectrum, pts::Vector; n::Int = 1) → s::Vector w::Vector\n\nReturn the cumulative density function of the level spacings of order n evaluated at positions pts. The nearest neighbour level spacings are the default, given by n=1.\n\nArguments\n\nspect: The unfolded energy spectrum, given as an instance of type UnfoldedSpectrum.\npts: The positions where cumulative density function should be evaluated.\n\nKeyword arguments\n\nn=1 : The order of the level spacings.\n\nReturns\n\nw : Vector of the cumulative probabilities.\n\n\n\n\n\n","category":"function"},{"location":"API/#SpectralStatistics.level_spacing_u","page":"API","title":"SpectralStatistics.level_spacing_u","text":"level_spacing_u(model::Model, pts::Vector; n::Int = 1) → u::Vector\n\nReturn the analytical expression for the spectraly normalized cumulative density function of the nearest neighbour level spacings evaluated at positions pts.\n\nArguments\n\nmodel: The model, given as an instance of a concrete subtype of Model.\npts: The positions where cumulative density function should be evaluated.\n\nKeyword arguments\n\nn=1 : The order of the level spacings.\n\nReturns\n\nu : Vector of the cumulative probabilities.\n\n\n\n\n\nlevel_spacing_u(spect::UnfoldedSpectrum, pts::Vector; n::Int = 1) → s::Vector u::Vector\n\nReturn the spectraly normalized cumulative density function of the nearest neighbour level spacings evaluated at positions pts.\n\nDescription\n\nThe nearest neighbour level spacing distributions are the most commonly studied spectral statistics. To normalize the relative fluctuations it is useful to perform the following nonlinear transformation\n\nU(s) = frac2piarccossqrt1-W(s)\n\nwhere W(s) is the cumulative level spacing distribution.\n\nArguments\n\nspect: The unfolded energy spectrum, given as an instance of type UnfoldedSpectrum.\npts: The positions where cumulative density function should be evaluated.\n\nKeyword arguments\n\nn=1 : The order of the level spacings.\n\nReturns\n\nu : Vector of the cumulative probabilities.\n\n\n\n\n\n","category":"function"},{"location":"API/#SpectralStatistics.number_variance","page":"API","title":"SpectralStatistics.number_variance","text":"number_variance(model::Model, l) → p::Vector\n\nNumber variance.\n\n\n\n\n\nnumber_variance(spect::S, x::Vector{T}) → s::Vector\n\nNumber variance.\n\n\n\n\n\n","category":"function"},{"location":"API/#SpectralStatistics.rigidity","page":"API","title":"SpectralStatistics.rigidity","text":"rigidity(model::Model, l::Vector) → p::Vector\n\nSpectral rigidity.\n\n\n\n\n\n","category":"function"},{"location":"API/#SpectralStatistics.spectral_form_factor","page":"API","title":"SpectralStatistics.spectral_form_factor","text":"spectral_form_factor(model::Model, t) → p::Vector\n\nSpectral form factor.\n\n\n\n\n\nspectral_form_factor(E::Vector{T}, t::T) → s::Vector\n\nSpectral form factor.\n\n\n\n\n\n","category":"function"},{"location":"API/#Analytical-models","page":"API","title":"Analytical models","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Poisson\nGOE\nGUE\nGSE\nGamma\nBrody\nBerryRobnik\nBerryRobnikBrody ","category":"page"},{"location":"API/#SpectralStatistics.Poisson","page":"API","title":"SpectralStatistics.Poisson","text":"Poisson <: Model \n\nPoisson is a concrete type used to represent the Poisson model. \n\nDescription\n\nThe Poisson model applies to sequences of independent random variables.  Based on the Berry-Tabor conjecture the spectral statistics (in the semiclassical limit)  of integrable systems are described by this model.\n\nAttributes\n\nThis model has no attributes.\n\nAPI\n\nThe following spectral statistcs can be evaluated for this model:\n\nlevel_spacing_pdf\nlevel_spacing_cdf\nlevel_spacing_u\nnumber_variance\nrigidity\nspectral_form_factor\n\n\n\n\n\n","category":"type"},{"location":"API/#SpectralStatistics.GOE","page":"API","title":"SpectralStatistics.GOE","text":"GOE <: Model \n\nGOE is a concrete type used to represent the Gaussian Orthogonal Ensemble model of random matrix theory. \n\nDescription\n\nBased on the Bohigas-Giannoni-Schmit conjecture this model describes the spectral statistics (in the semiclassical limit)  of chaotic systems, invariant under time-reversal symmetry and without spin 1/2 interactions.\n\nAttributes\n\nThis model has no attributes.\n\nAPI\n\nThe following spectral statistcs can be evaluated for this model:\n\nlevel_spacing_pdf\nlevel_spacing_cdf\nlevel_spacing_u\nnumber_variance\nrigidity\nspectral_form_factor\n\n\n\n\n\n","category":"type"},{"location":"API/#SpectralStatistics.GUE","page":"API","title":"SpectralStatistics.GUE","text":"GUE <: Model \n\nGUE is a concrete type used to represent the Gaussian Unitary Ensemble model of random matrix theory. \n\nDescription\n\nBased on the Bohigas-Giannoni-Schmit conjecture this model describes the spectral statistics (in the semiclassical limit)  of chaotic systems, without time-reversal (or a generalized anti-unitary) symmetry.\n\nAttributes\n\nThis model has no attributes.\n\nAPI\n\nThe following spectral statistcs can be evaluated for this model:\n\nlevel_spacing_pdf\nlevel_spacing_cdf\nlevel_spacing_u\nnumber_variance\nrigidity\nspectral_form_factor\n\n\n\n\n\n","category":"type"},{"location":"API/#SpectralStatistics.GSE","page":"API","title":"SpectralStatistics.GSE","text":"GSE <: Model \n\nGSE is a concrete type used to represent the Gaussian Symplectic Ensemble model of random matrix theory. \n\nDescription\n\nBased on the Bohigas-Giannoni-Schmit conjecture this model describes the spectral statistics (in the semiclassical limit)  of chaotic systems, invariant under time-reversal symmetry and including spin 1/2 interactions.\n\nAttributes\n\nThis model has no attributes.\n\nAPI\n\nThe following spectral statistcs can be evaluated for this model:\n\nlevel_spacing_pdf\nlevel_spacing_cdf\nlevel_spacing_u\nnumber_variance\nrigidity\nspectral_form_factor\n\n\n\n\n\n","category":"type"},{"location":"API/#SpectralStatistics.Gamma","page":"API","title":"SpectralStatistics.Gamma","text":"Gamma <: Model \n\nGamma is a concrete type used to represent the Gamma model. \n\nDescription\n\nThis model represents the gamma distributions. \n\nAttributes\n\ngamma: The level repulsion exponent.\n\nAPI\n\nThe following spectral statistcs can be evaluated for this model:\n\nlevel_spacing_pdf\nlevel_spacing_cdf\n\n\n\n\n\n","category":"type"},{"location":"API/#SpectralStatistics.Brody","page":"API","title":"SpectralStatistics.Brody","text":"Brody <: Model \n\nBrody is a concrete type used to represent the Brody model. \n\nDescription\n\nThis model interpolates between the Poisson (beta=0) and Wigner-Dyson (beta=1) distributions.  It is commonly used to describe systems with some degree of localization. \n\nAttributes\n\nbeta: The level repulsion exponent.\n\nAPI\n\nThe following spectral statistcs can be evaluated for this model:\n\nlevel_spacing_pdf\nlevel_spacing_cdf\nlevel_spacing_u\n\n\n\n\n\n","category":"type"},{"location":"API/#SpectralStatistics.BerryRobnik","page":"API","title":"SpectralStatistics.BerryRobnik","text":"BerryRobnik <: Model\n\nBerryRobnik is a concrete type used to represent the Berry-Robnik model (with two components). \n\nDescription\n\nThis model describes the spectral statistics (in the semiclassical limit)  of systems whose classical phase space features both regular and chaotic motion. These systems are commonly refered to as systems with divided phase space or mixed-type systems. The model rests on the argument that in the semiclassical limit the spectrum subspectra belonging to states that describe  belonging to the states to the distinct types of motion (regular and chaotic) will decompose into separate components. The regular part of the spectrum is modeled by Poisson statistics and the chaotic part by GOE statistics.\n\nAttributes\n\nrho: The Liouville measure of the combined regular component.\n\nAPI\n\nThe following spectral statistcs can be evaluated for this model:\n\nlevel_spacing_pdf\nlevel_spacing_cdf\nlevel_spacing_u\nnumber_variance\n\n\n\n\n\n","category":"type"},{"location":"API/#SpectralStatistics.BerryRobnikBrody","page":"API","title":"SpectralStatistics.BerryRobnikBrody","text":"BerryRobnikBrody <: Model \n\nBerryRobnikBrody is a concrete type used to represent the Berry-Robnik-Brody model. \n\nDescription\n\nThis model is the Berry-Robnik model (see BerryRobnik) where instead of the GOE the Brody model is used for the chaotic part.    It is commonly used to describe systems with a divided phase space as well as some degree of localization. \n\nAttributes\n\nrho: The Liouville measure of the combined regular component.\nbeta: The level repulsion exponent.\n\nAPI\n\nThe following spectral statistcs can be evaluated for this model:\n\nlevel_spacing_pdf\nlevel_spacing_cdf\nlevel_spacing_u\n\n\n\n\n\n","category":"type"},{"location":"API/#Functions","page":"API","title":"Functions","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"unfold_spectrum","category":"page"},{"location":"API/#SpectralStatistics.unfold_spectrum","page":"API","title":"SpectralStatistics.unfold_spectrum","text":"unfold_spectrum(spect::DataSample, f::Function) → unfolded::UnfoldedSpectrum\n\nReturn the unfolded spectrum of spect by using the function f  as the smooth part of the integrated density of states.\n\nArguments\n\nspect: Spectrum to be unfolded.\nf(x) : Function modeling the smooth part of the integrated density of states, where the argument x is the energy.\n\nReturns\n\nunfolded : The unfolded spectrum as an instance of type UnfoldedSpectrum.\n\n\n\n\n\nunfold_spectrum(spect::DataSample, n::Int) → unfolded::UnfoldedSpectrum\n\nReturn the unfolded spectrum of spect by fitting a polynomial of degree n  to the integrated density of states.\n\nArguments\n\nn : Degree of polynomial moddeling the smooth part of the integrated density of states.\n\n\n\n\n\nunfold_spectrum(spect::DataSample, n::Int, cut_values) → unfolded::UnfoldedSpectrum\n\nReturn the unfolded spectrum of spect by piecewise fitting polynomials of degree n  to the integrated density of states.\n\nArguments\n\ncut_values : Relative positions of the cuts between the spectral pieces.  \n\n\n\n\n\n","category":"function"}]
}
